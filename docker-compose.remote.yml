version: "3.8"  # remove if using Docker Compose v2

services:
  vote:
    image: purubaranwal/onilne-exam-voting-vote:latest
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s
    ports:
      - "5000:80"
    networks:
      - front-tier
      - back-tier

  result:
    image: purubaranwal/onilne-exam-voting-result:latest
    entrypoint: nodemon --inspect=0.0.0.0 server.js
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5001:80"
      - "127.0.0.1:9229:9229"
    networks:
      - front-tier
      - back-tier

  worker:
    image: purubaranwal/onilne-exam-voting-worker:latest
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - back-tier

  redis:
    image: purubaranwal/onilne-exam-voting-redis:latest
    healthcheck:
      test: ["CMD", "/usr/local/bin/redis-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - back-tier

  db:
    image: purubaranwal/onilne-exam-voting-db:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD", "/usr/local/bin/postgres-healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - back-tier

  seed:
    image: purubaranwal/onilne-exam-voting-seed:latest
    profiles: ["seed"]
    depends_on:
      vote:
        condition: service_healthy
    networks:
      - front-tier
    restart: "no"

volumes:
  db-data:

networks:
  front-tier:
  back-tier:
          
